// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/[locale]" | "/[locale]/about" | "/[locale]/account" | "/[locale]/auth/login" | "/[locale]/contact" | "/[locale]/dashboard" | "/[locale]/dashboard/owner" | "/[locale]/dashboard/tenant" | "/[locale]/faq" | "/[locale]/legal-notice" | "/[locale]/portfolio" | "/[locale]/portfolio/[slug]" | "/[locale]/privacy-policy" | "/[locale]/services" | "/[locale]/signin" | "/[locale]/signup" | "/[locale]/superadmin" | "/[locale]/superadmin/applications" | "/[locale]/superadmin/documents" | "/[locale]/superadmin/properties" | "/[locale]/superadmin/signin" | "/[locale]/superadmin/users" | "/access-denied" | "/admin" | "/auth/login" | "/onboarding" | "/signin" | "/signup" | "/superadmin" | "/superadmin/applications" | "/superadmin/documents" | "/superadmin/properties" | "/superadmin/signin" | "/superadmin/users"
type AppRouteHandlerRoutes = "/api/auth/[...nextauth]" | "/api/auth/csrf" | "/api/auth/signup" | "/api/contact" | "/api/onboarding/draft" | "/api/owner/applications/[id]" | "/api/portfolio" | "/api/profiles/owner" | "/api/profiles/tenant" | "/api/properties" | "/api/properties/[id]" | "/api/properties/[id]/archive" | "/api/properties/[id]/availability" | "/api/properties/[id]/blocks" | "/api/properties/[id]/blocks/[blockId]" | "/api/properties/[id]/ical-sources" | "/api/properties/[id]/ical-sources/[sourceId]" | "/api/properties/[id]/ical-sync" | "/api/properties/[id]/ical.ics" | "/api/properties/[id]/images" | "/api/properties/[id]/images/[publicId]" | "/api/properties/[id]/images/order" | "/api/properties/[id]/publish" | "/api/properties/[id]/restore" | "/api/properties/[id]/seasonal-listings" | "/api/properties/[id]/unpublish" | "/api/superadmin/applications" | "/api/superadmin/applications/[id]" | "/api/superadmin/documents" | "/api/superadmin/documents/[id]" | "/api/superadmin/properties" | "/api/superadmin/properties/bulk" | "/api/superadmin/properties/export.csv" | "/api/superadmin/users" | "/api/superadmin/users/[id]" | "/api/tenant/applications" | "/api/tenant/applications/[id]" | "/api/tenant/documents" | "/api/tenant/documents/[id]" | "/api/tenant/favorites" | "/api/tenant/favorites/[id]" | "/api/tenant/preferences" | "/api/tenant/preferences/[id]" | "/api/uploads/sign" | "/api/users/me" | "/sitemaps/[slug]" | "/sitemaps/static.xml"
type PageRoutes = never
type LayoutRoutes = "/" | "/[locale]" | "/[locale]/about" | "/[locale]/auth" | "/[locale]/auth/login" | "/[locale]/contact" | "/[locale]/faq" | "/[locale]/legal-notice" | "/[locale]/portfolio" | "/[locale]/portfolio/[slug]" | "/[locale]/privacy-policy" | "/[locale]/services" | "/[locale]/superadmin" | "/[locale]/superadmin/applications" | "/[locale]/superadmin/documents" | "/[locale]/superadmin/properties" | "/[locale]/superadmin/users" | "/admin" | "/auth" | "/auth/login" | "/onboarding" | "/signin" | "/signup" | "/superadmin" | "/superadmin/applications" | "/superadmin/documents" | "/superadmin/properties" | "/superadmin/signin" | "/superadmin/users"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/[locale]": { "locale": string; }
  "/[locale]/about": { "locale": string; }
  "/[locale]/account": { "locale": string; }
  "/[locale]/auth": { "locale": string; }
  "/[locale]/auth/login": { "locale": string; }
  "/[locale]/contact": { "locale": string; }
  "/[locale]/dashboard": { "locale": string; }
  "/[locale]/dashboard/owner": { "locale": string; }
  "/[locale]/dashboard/tenant": { "locale": string; }
  "/[locale]/faq": { "locale": string; }
  "/[locale]/legal-notice": { "locale": string; }
  "/[locale]/portfolio": { "locale": string; }
  "/[locale]/portfolio/[slug]": { "locale": string; "slug": string; }
  "/[locale]/privacy-policy": { "locale": string; }
  "/[locale]/services": { "locale": string; }
  "/[locale]/signin": { "locale": string; }
  "/[locale]/signup": { "locale": string; }
  "/[locale]/superadmin": { "locale": string; }
  "/[locale]/superadmin/applications": { "locale": string; }
  "/[locale]/superadmin/documents": { "locale": string; }
  "/[locale]/superadmin/properties": { "locale": string; }
  "/[locale]/superadmin/signin": { "locale": string; }
  "/[locale]/superadmin/users": { "locale": string; }
  "/access-denied": {}
  "/admin": {}
  "/api/auth/[...nextauth]": { "nextauth": string[]; }
  "/api/auth/csrf": {}
  "/api/auth/signup": {}
  "/api/contact": {}
  "/api/onboarding/draft": {}
  "/api/owner/applications/[id]": { "id": string; }
  "/api/portfolio": {}
  "/api/profiles/owner": {}
  "/api/profiles/tenant": {}
  "/api/properties": {}
  "/api/properties/[id]": { "id": string; }
  "/api/properties/[id]/archive": { "id": string; }
  "/api/properties/[id]/availability": { "id": string; }
  "/api/properties/[id]/blocks": { "id": string; }
  "/api/properties/[id]/blocks/[blockId]": { "id": string; "blockId": string; }
  "/api/properties/[id]/ical-sources": { "id": string; }
  "/api/properties/[id]/ical-sources/[sourceId]": { "id": string; "sourceId": string; }
  "/api/properties/[id]/ical-sync": { "id": string; }
  "/api/properties/[id]/ical.ics": { "id": string; }
  "/api/properties/[id]/images": { "id": string; }
  "/api/properties/[id]/images/[publicId]": { "id": string; "publicId": string; }
  "/api/properties/[id]/images/order": { "id": string; }
  "/api/properties/[id]/publish": { "id": string; }
  "/api/properties/[id]/restore": { "id": string; }
  "/api/properties/[id]/seasonal-listings": { "id": string; }
  "/api/properties/[id]/unpublish": { "id": string; }
  "/api/superadmin/applications": {}
  "/api/superadmin/applications/[id]": { "id": string; }
  "/api/superadmin/documents": {}
  "/api/superadmin/documents/[id]": { "id": string; }
  "/api/superadmin/properties": {}
  "/api/superadmin/properties/bulk": {}
  "/api/superadmin/properties/export.csv": {}
  "/api/superadmin/users": {}
  "/api/superadmin/users/[id]": { "id": string; }
  "/api/tenant/applications": {}
  "/api/tenant/applications/[id]": { "id": string; }
  "/api/tenant/documents": {}
  "/api/tenant/documents/[id]": { "id": string; }
  "/api/tenant/favorites": {}
  "/api/tenant/favorites/[id]": { "id": string; }
  "/api/tenant/preferences": {}
  "/api/tenant/preferences/[id]": { "id": string; }
  "/api/uploads/sign": {}
  "/api/users/me": {}
  "/auth": {}
  "/auth/login": {}
  "/onboarding": {}
  "/signin": {}
  "/signup": {}
  "/sitemaps/[slug]": { "slug": string; }
  "/sitemaps/static.xml": {}
  "/superadmin": {}
  "/superadmin/applications": {}
  "/superadmin/documents": {}
  "/superadmin/properties": {}
  "/superadmin/signin": {}
  "/superadmin/users": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/[locale]": never
  "/[locale]/about": never
  "/[locale]/auth": never
  "/[locale]/auth/login": never
  "/[locale]/contact": never
  "/[locale]/faq": never
  "/[locale]/legal-notice": never
  "/[locale]/portfolio": never
  "/[locale]/portfolio/[slug]": never
  "/[locale]/privacy-policy": never
  "/[locale]/services": never
  "/[locale]/superadmin": never
  "/[locale]/superadmin/applications": never
  "/[locale]/superadmin/documents": never
  "/[locale]/superadmin/properties": never
  "/[locale]/superadmin/users": never
  "/admin": never
  "/auth": never
  "/auth/login": never
  "/onboarding": never
  "/signin": never
  "/signup": never
  "/superadmin": never
  "/superadmin/applications": never
  "/superadmin/documents": never
  "/superadmin/properties": never
  "/superadmin/signin": never
  "/superadmin/users": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
